# Generated by Django 5.2 on 2025-05-01 18:32

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("name", models.CharField(blank=True, verbose_name="name")),
                ("last_name", models.CharField(blank=True, verbose_name="last_name")),
                ("username", models.CharField(blank=True, verbose_name="username")),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                ("phone_number", models.CharField(blank=True, verbose_name="phone")),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="balance",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="verified"),
                ),
                (
                    "access_level",
                    models.CharField(
                        choices=[
                            ("client", "Client"),
                            ("admin", "Admin"),
                            ("owner", "Owner"),
                        ],
                        default="client",
                        max_length=10,
                        verbose_name="access level",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="date of birth"
                    ),
                ),
                (
                    "gender",
                    models.CharField(blank=True, max_length=10, verbose_name="gender"),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="address"
                    ),
                ),
                (
                    "registration_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="registration date"
                    ),
                ),
                (
                    "visits_count",
                    models.PositiveIntegerField(default=0, verbose_name="visits count"),
                ),
                (
                    "activity_history",
                    models.JSONField(default=list, verbose_name="activity history"),
                ),
                (
                    "is_subscribed",
                    models.BooleanField(default=True, verbose_name="subscribed"),
                ),
                (
                    "preferred_contact_method",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name="preferred contact method",
                    ),
                ),
                (
                    "transaction_history",
                    models.JSONField(default=list, verbose_name="transaction history"),
                ),
                (
                    "loyalty_discount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=5,
                        verbose_name="loyalty discount",
                    ),
                ),
                ("allergies", models.TextField(blank=True, verbose_name="allergies")),
                (
                    "special_notes",
                    models.TextField(blank=True, verbose_name="special notes"),
                ),
                (
                    "social_media_links",
                    models.JSONField(default=dict, verbose_name="social media links"),
                ),
                (
                    "referral_code",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="referral code",
                    ),
                ),
                (
                    "source_of_signup",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="source of signup"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
